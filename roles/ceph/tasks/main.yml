---

- name: Set SELinux context on /var/lib/ceph files
  file:
    path: /var/lib/ceph
    setype: svirt_sandbox_file_t
    recurse: yes
    state: directory

- name: Set SELinux context on /etc/ceph files
  file:
    path: /etc/ceph
    setype: svirt_sandbox_file_t
    recurse: yes
    state: directory

- name: Deploy monitor 1
  docker_container:
    name: ceph-mon
    image: ceph/daemon
    command: mon
    state: started
    detach: yes
    network_mode: host
    restart_policy: always
    volumes:
    - "/etc/ceph:/etc/ceph"
    - "/var/lib/ceph/:/var/lib/ceph/"
    env:
      MON_IP: "{{ hostvars[inventory_hostname]['ansible_' + vars['private_iface']]['ipv4']['address'] }}"
      CEPH_PUBLIC_NETWORK: "{{ public_network }}"
  run_once: true

- name: Slurp configration files in monitor 1
  slurp: src={{ item }}
  with_items:
    - /etc/ceph/ceph.client.admin.keyring
    - /etc/ceph/ceph.conf
    - /etc/ceph/ceph.mon.keyring
  register: mon_config_files
  run_once: true

- name: Write out configration files
  copy:
    dest: "{{ item.item }}"
    content: "{{ item.content | b64decode }}"
    mode: 0600
  with_items: "{{ mon_config_files.results }}"

- name: Deploy monitors 2 & 3
  docker_container:
    name: ceph-mon
    image: ceph/daemon
    command: mon
    state: started
    detach: yes
    network_mode: host
    restart_policy: always
    volumes:
    - "/etc/ceph:/etc/ceph"
    - "/var/lib/ceph/:/var/lib/ceph/"
    env:
      MON_IP: "{{ hostvars[inventory_hostname]['ansible_' + vars['private_iface']]['ipv4']['address'] }}"
      CEPH_PUBLIC_NETWORK: "{{ public_network }}"

- name: Deploy managers
  docker_container:
    name: ceph-mgr
    image: ceph/daemon
    command: mgr
    state: started
    detach: yes
    network_mode: host
    restart_policy: always
    privileged: true
    pid_mode: host
    volumes:
    - "/etc/ceph:/etc/ceph"
    - "/var/lib/ceph/:/var/lib/ceph/"

- name: Get manager container id
  shell: docker ps | awk '/ceph-mgr/{print $1}'
  register: ceph_mgr_id

- name: Dump auth credentials for the OSD into the appropriate location
  command: docker exec {{ ceph_mgr_id.stdout }} ceph auth get client.bootstrap-osd -o /var/lib/ceph/bootstrap-osd/ceph.keyring

